var documenterSearchIndex = {"docs":
[{"location":"formulations/#Type-Hierarchy","page":"Network Formulations","title":"Type Hierarchy","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"The original type hierarchy of PowerModels is used.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"For details on GenericPowerModel, see PM.jl [documentation](https://lanl-ansi.github.io/PM.jl/stable/).","category":"page"},{"location":"formulations/#Formulations-overview","page":"Network Formulations","title":"Formulations overview","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Extending PowerModels,  formulations for balanced  OPF in DC grids have been implemented and mapped to the following AC grid formulations:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"ACPPowerModel\nDCPPowerModel\nLPACPowerModel\nSOCWRPowerModel\nSDPWRMPowerModel\nQCWRPowerModel\nQCWRTriPowerModel","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Note that from the perspective of OPF convex relaxation for DC grids, applying the same assumptions as the AC equivalent, the same formulation (and variable space) is obtained for - SOCWRPowerModel,  SDPWRMPowerModel,  QCWRPowerModel and  QCWRTriPowerModel. These are referred to as formulations in the AC WR(M) variable space.","category":"page"},{"location":"formulations/#Formulation-details","page":"Network Formulations","title":"Formulation details","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"The formulations are categorized as Bus Injection Model (BIM) or Branch Flow Model (BFM).","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Applied to DC grids, the BIM uses series conductance notation, and adds separate equations for the to and from line flow.\nConversely, BFM uses series resistance parameters, and adds only a single equation per line, representing P_lij + P_lji = P_l^loss.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Note that in a DC grid, under the static power flow assumption, power is purely active, impedance reduces to resistance, and voltages and currents are defined by magnitude and direction.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Parameters used:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"g^series=frac1r^series\n, dc line series impedance\np in 12\nfor single (1) or bipole (2) DC lines\nU_i^max\nmaximum AC node voltage\na\nconstant power converter loss\nb\nconverter loss proportional to current magnitude\nc\nconverter loss proportional to square of current magnitude","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Note that generally, a geq 0 b geq 0 c geq 0 as physical losses are positive.","category":"page"},{"location":"formulations/#ACPPowerModel-(BIM)","page":"Network Formulations","title":"ACPPowerModel (BIM)","text":"","category":"section"},{"location":"formulations/#DC-lines","page":"Network Formulations","title":"DC lines","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Active power flow from side: P^dc_ij = p cdot g^series_ij cdot U^dc_i cdot (U^dc_i - U^dc_j).\nActive power flow to side: P^dc_ji = p cdot g^series_ij cdot U^dc_j cdot (U^dc_j - U^dc_i).","category":"page"},{"location":"formulations/#ACDC-converters","page":"Network Formulations","title":"ACDC converters","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Power balance: P^conv ac_ij + P^conv dc_ji = a + b cdot I^conv ac + c cdot (I^conv ac)^2.\nCurrent variable model: (P^convac_ij)^2 + (Q^convac_ij)^2 = U_i^2 cdot  (I^conv ac)^2.\nLCC converters, active /reactive power:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"P^conv ac = cosvarphi_c cdot S^convacrated","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Q^conv ac = sinvarphi_c cdot S^convacrated","category":"page"},{"location":"formulations/#DCPPowerModel-(NF)","page":"Network Formulations","title":"DCPPowerModel (NF)","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Due to the absence of voltage angles in DC grids, the DC power flow model reduces to network flow (NF) under the 'DC' assumptions","category":"page"},{"location":"formulations/#DC-lines-2","page":"Network Formulations","title":"DC lines","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Network flow model: P^dc_ij + P^dc_ji = 0","category":"page"},{"location":"formulations/#ACDC-converters-2","page":"Network Formulations","title":"ACDC converters","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Under the same assumptions as MATPOWER (U_i approx 1), P^conv ac_ij approx I^conv ac allowing the converter model to be formulated as:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Network flow model: P^conv ac_ij + P^conv dc_ji = a + b P^conv ac_ij\nLCC converters, n.a.","category":"page"},{"location":"formulations/#AC-WR(M)-variable-space.-(BFM)","page":"Network Formulations","title":"AC WR(M) variable space.  (BFM)","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"For the SDP formulation, the norm syntax is used to represent the SOC expressions below.","category":"page"},{"location":"formulations/#DC-lines-3","page":"Network Formulations","title":"DC lines","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"The variable u^dc_ii represents (U^dc_i)^2 and i^dc_ij represents (I^dc_ij)^2.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Active power flow from side: P^dc_ij + P^dc_ji = p cdot r^series cdot i^dc_ij.\nConvex relaxation of power definition: (P^dc_ij)^2 leq u^dc_ii cdot i^dc_ij.\nLifted KVL: u^dc_jj = u^dc_ii -2 p cdot r^series P^dc_ij + (r^series)^2 i^dc_ij","category":"page"},{"location":"formulations/#ACDC-converters-3","page":"Network Formulations","title":"ACDC converters","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Two separate current variables, I^conv ac and i^conv ac sq are defined, the nonconvex relation i^conv ac sq = (I^conv ac)^2 is convexified, using U_i leq U_i^max:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Power balance: P^conv ac_ij + P^conv dc_ji = a + bcdot I^conv ac + ccdot i^conv ac sq.\nSquared current: (P^conv ac_ij)^2 + (Q^conv ac_ij)^2 leq  u_ii cdot  i^conv ac sq\nLinear current: (P^conv ac_ij)^2 + (Q^conv ac_ij)^2 leq  (U_i^max)^2 cdot  (I^conv ac)^2\nLinking both current variables: (I^conv ac)^2 leq i^conv ac sq\nLCC converters:","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Q^convac geq Q^1_c + (P^convac - P^1_c)frac(Q^2_c  - Q^1_c)(P^2_c  - P^1_c)","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"P^1_c =  cos  varphi_c^textmin cdot S^convacrated","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"P^2_c =   cos varphi_c^textmax cdot S^convacrated","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Q^1_c =   sin  varphi_c^textmin cdot S^convacrated","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Q^2_c =   sin varphi_c^textmax cdot S^convacrated","category":"page"},{"location":"formulations/#AC-WR(M)-variable-space.-(BIM)","page":"Network Formulations","title":"AC WR(M) variable space.  (BIM)","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"For the SDP formulation, the norm syntax is used to represent the SOCs.","category":"page"},{"location":"formulations/#DC-lines-4","page":"Network Formulations","title":"DC lines","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"The variable u^dc_ii represents (U^dc_i)^2 and u^dc_ij represents U^dc_icdot U^dc_j.","category":"page"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"Active power flow from side: P^dc_ij = p cdot g^series cdot (u^dc_ii - u^dc_ij).\nActive power flow to side: P^dc_ji = p cdot g^series cdot (u^dc_jj - u^dc_ij).\nConvex relaxation of voltage products: (u^dc_ij)^2 leq u^dc_ii cdot u^dc_jj.","category":"page"},{"location":"formulations/#ACDC-converters-4","page":"Network Formulations","title":"ACDC converters","text":"","category":"section"},{"location":"formulations/","page":"Network Formulations","title":"Network Formulations","text":"An ACDC converter model in BIM is not derived.","category":"page"},{"location":"quickguide/#Quick-Start-Guide","page":"Getting Started","title":"Quick Start Guide","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"Once PowerModelsACDC is installed, Ipopt is installed, and an ACDC network data file (e.g. \"case5_acdc.m\" in the folder \"./test/data\") has been acquired, an ACDC Optimal Power Flow can be executed with:","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"using PowerModelsACDC\nusing Ipopt\n\nresult = run_acdcopf(\"case5_acdc.m\", ACPPowerModel, IpoptSolver())\nresult[\"solution\"][\"busdc\"][\"1\"]\nresult[\"solution\"][\"convdc\"][\"1\"]","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"You can also find a test script in the folder \"./test/scripts\".","category":"page"},{"location":"quickguide/#Modifying-settings","page":"Getting Started","title":"Modifying settings","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"The flow AC and DC branch results are not written to the result by default. To inspect the flow results, pass a settings Dict","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"result = run_acdcopf(\"case5_acdc.m\", ACPPowerModel, IpoptSolver(), setting = Dict(\"output\" => Dict(\"branch_flows\" => true)))\nresult[\"solution\"][\"branchdc\"][\"1\"]\nresult[\"solution\"][\"branch\"][\"2\"]","category":"page"},{"location":"quickguide/#Remark","page":"Getting Started","title":"Remark","text":"","category":"section"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"Note that run_ac_opf still works and runs a classic AC OPF on only the AC part of the described grid.","category":"page"},{"location":"quickguide/","page":"Getting Started","title":"Getting Started","text":"result = run_ac_opf(\"case5_acdc.m\", IpoptSolver())","category":"page"},{"location":"variables/#Variables","page":"Variables","title":"Variables","text":"","category":"section"},{"location":"variables/#Functions","page":"Variables","title":"Functions","text":"","category":"section"},{"location":"variables/","page":"Variables","title":"Variables","text":"We provide the following methods to provide a compositional approach for defining common variables used in power flow models. These methods should always be defined over \"GenericPowerModel\", from the base PowerModels.jl.","category":"page"},{"location":"variables/","page":"Variables","title":"Variables","text":"Modules = [PowerModelsACDC]\nPages   = [\"core/variableconv.jl\", \"core/variabledcgrid.jl\"]\nOrder   = [:type, :function]\nPrivate  = true","category":"page"},{"location":"variables/#PowerModelsACDC.variable_acside_current-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_acside_current","text":"variable: iconv_ac[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_acside_current-Tuple{Union{AbstractACTModel, AbstractBFModel, AbstractWRConicModel, AbstractWRMModel, AbstractWRModel}}","page":"Variables","title":"PowerModelsACDC.variable_acside_current","text":"variable: iconv_ac[j] and iconv_ac_sq[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_acside_current_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_acside_current_ne","text":"variable: iconv_ac_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_acside_current_ne-Tuple{Union{AbstractACTModel, AbstractBFModel, AbstractWRConicModel, AbstractWRMModel, AbstractWRModel}}","page":"Variables","title":"PowerModelsACDC.variable_acside_current_ne","text":"variable: iconv_ac_ne[j] and iconv_ac_sq_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_reactor_active_power_from-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_reactor_active_power_from","text":"variable: pconv_pr_from[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_reactor_active_power_from_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_reactor_active_power_from_ne","text":"variable: pconv_pr_from_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_reactor_current_sqr-Tuple{Union{AbstractACTModel, AbstractBFModel, AbstractWRConicModel, AbstractWRMModel, AbstractWRModel}}","page":"Variables","title":"PowerModelsACDC.variable_conv_reactor_current_sqr","text":"variable: irc_sq[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_reactor_current_sqr_ne-Tuple{Union{AbstractACTModel, AbstractBFModel, AbstractWRConicModel, AbstractWRMModel, AbstractWRModel}}","page":"Variables","title":"PowerModelsACDC.variable_conv_reactor_current_sqr_ne","text":"variable: irc_sq_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_reactor_reactive_power_from-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_reactor_reactive_power_from","text":"variable: qconv_pr_from[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_reactor_reactive_power_from_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_reactor_reactive_power_from_ne","text":"variable: qconv_pr_from_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_transformer_active_power_to-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_transformer_active_power_to","text":"variable: pconv_grid_ac_to[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_transformer_active_power_to_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_transformer_active_power_to_ne","text":"variable: pconv_grid_ac_to_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_transformer_current_sqr-Tuple{Union{AbstractACTModel, AbstractBFModel, AbstractWRConicModel, AbstractWRMModel, AbstractWRModel}}","page":"Variables","title":"PowerModelsACDC.variable_conv_transformer_current_sqr","text":"variable: itf_sq[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_transformer_current_sqr_ne-Tuple{Union{AbstractACTModel, AbstractBFModel, AbstractWRConicModel, AbstractWRMModel, AbstractWRModel}}","page":"Variables","title":"PowerModelsACDC.variable_conv_transformer_current_sqr_ne","text":"variable: itf_sq_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_transformer_reactive_power_to-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_transformer_reactive_power_to","text":"variable: qconv_grid_ac_to[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_conv_transformer_reactive_power_to_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_conv_transformer_reactive_power_to_ne","text":"variable: qconv_grid_ac_to_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_active_power-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_active_power","text":"variable: pconv_ac[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_active_power_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_active_power_ne","text":"variable: pconv_ac_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_angle-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_angle","text":"variable: vaf[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_angle_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_angle_ne","text":"variable: vaf_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_cross_products-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_cross_products","text":"variable: wrf_ac[j] and wif_ac  for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_cross_products_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_cross_products_ne","text":"variable: wrf_ac_ne[j] and wif_ac  for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_magnitude-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_magnitude","text":"variable: vmf[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_magnitude_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_magnitude_ne","text":"variable: vmf_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_magnitude_sqr-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_magnitude_sqr","text":"variable: wf_ac for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_filter_voltage_magnitude_sqr_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_filter_voltage_magnitude_sqr_ne","text":"variable: wf_ac_ne for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_firing_angle-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_firing_angle","text":"variable: pconv_dc[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_firing_angle_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_firing_angle_ne","text":"variable: pconv_dc_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_angle-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_angle","text":"variable: vac[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_angle_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_angle_ne","text":"variable: vac_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_cross_products-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_cross_products","text":"variable: wrc_ac[j] and wic_ac[j]  for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_cross_products_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_cross_products_ne","text":"variable: wrc_ac_ne[j] and wic_ac_ne[j]  for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_magnitude-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_magnitude","text":"variable: vmc[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_magnitude_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_magnitude_ne","text":"variable: vmc_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_magnitude_sqr-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_magnitude_sqr","text":"variable: wc_ac[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_internal_voltage_magnitude_sqr_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_internal_voltage_magnitude_sqr_ne","text":"variable: wc_ac_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_ne","text":"variable: 0 <= convdc_ne[c] <= 1 for c in `candidate converters\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_reactive_power-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_reactive_power","text":"variable: qconv_ac[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_reactive_power_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_reactive_power_ne","text":"variable: qconv_ac_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_to_grid_active_power-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_to_grid_active_power","text":"variable: pconv_grid_ac[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_to_grid_active_power_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_to_grid_active_power_ne","text":"variable: pconv_grid_ac_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_to_grid_reactive_power-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_to_grid_reactive_power","text":"variable: qconv_grid_ac[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_converter_to_grid_reactive_power_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_converter_to_grid_reactive_power_ne","text":"variable: qconv_grid_ac_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dc_converter-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dc_converter","text":"All converter variables\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dc_converter_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dc_converter_ne","text":"All converter variables\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcside_power-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcside_power","text":"variable: pconv_dc[j] for j in convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcside_power_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcside_power_ne","text":"variable: pconv_dc_ne[j] for j in candidate convdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_active_dcbranch_flow-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_active_dcbranch_flow","text":"variable: p_dcgrid[l,i,j] for (l,i,j) in arcs_dcgrid\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_active_dcbranch_flow_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_active_dcbranch_flow_ne","text":"variable: p_dcgrid[l,i,j] for (l,i,j) in arcs_dcgrid\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_branch_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_branch_ne","text":"variable: 0 <= convdc_ne[c] <= 1 for c in `candidate converters\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcbranch_current_sqr-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcbranch_current_sqr","text":"variable: ccm_dcgrid[l] for (l) in branchdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcbranch_current_sqr_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcbranch_current_sqr_ne","text":"variable: ccm_dcgrid[l] for (l) in branchdc\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcgrid_voltage_magnitude-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcgrid_voltage_magnitude","text":"variable: vdcm[i] for i in dcbuses\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcgrid_voltage_magnitude_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcgrid_voltage_magnitude_ne","text":"variable: vdcm[i] for i in dcbuses\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcgrid_voltage_magnitude_sqr-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcgrid_voltage_magnitude_sqr","text":"variable: vdcm[i] for i in dcbuses\n\n\n\n\n\n","category":"method"},{"location":"variables/#PowerModelsACDC.variable_dcgrid_voltage_magnitude_sqr_ne-Tuple{AbstractPowerModel}","page":"Variables","title":"PowerModelsACDC.variable_dcgrid_voltage_magnitude_sqr_ne","text":"variable: vdcm[i] for i in dcbuses\n\n\n\n\n\n","category":"method"},{"location":"constraints/#Constraints","page":"Constraints","title":"Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"All the OPF constraints for the AC grids have been re-used from PowerModels.jl, and are therefore not repeated here.","category":"page"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"CurrentModule = PowerModelsACDC","category":"page"},{"location":"constraints/#Unit-Constraints","page":"Constraints","title":"Unit Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_active_load_gen_aggregation","category":"page"},{"location":"constraints/#DC-Bus-Constraints","page":"Constraints","title":"DC Bus Constraints","text":"","category":"section"},{"location":"constraints/#Setpoint-Constraints","page":"Constraints","title":"Setpoint Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_dc_voltage_magnitude_setpoint","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_dc_voltage_magnitude_setpoint","page":"Constraints","title":"PowerModelsACDC.constraint_dc_voltage_magnitude_setpoint","text":"vdc[i] == vdcm\n\n\n\n\n\nvdc[i] == vdcm\n\n\n\n\n\nwdc[i] == vdcm^2\n\n\n\n\n\n\n\n\n\n","category":"function"},{"location":"constraints/#KCL-Constraints-existing-dc-buses","page":"Constraints","title":"KCL Constraints existing dc buses","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_power_balance_dc","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_power_balance_dc","page":"Constraints","title":"PowerModelsACDC.constraint_power_balance_dc","text":"sum(p_dcgrid[a] for a in bus_arcs_dcgrid) + sum(pconv_dc[c] for c in bus_convs_dc) == pd\n\n\n\n\n\n","category":"function"},{"location":"constraints/#AC-Bus-Constraints","page":"Constraints","title":"AC Bus Constraints","text":"","category":"section"},{"location":"constraints/#KCL-Constraints-existing-ac-buses","page":"Constraints","title":"KCL Constraints existing ac buses","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_power_balance_ac","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_power_balance_ac","page":"Constraints","title":"PowerModelsACDC.constraint_power_balance_ac","text":"sum(p[a] for a in bus_arcs) + sum(p_dc[a_dc] for a_dc in bus_arcs_dc) == sum(pg[g] for g in bus_gens) + sum(pconvac[c] for c in bus_convs) - pd - gs*v^2\nsum(q[a] for a in bus_arcs) + sum(q_dc[a_dc] for a_dc in bus_arcs_dc) == sum(qg[g] for g in bus_gens) + sum(qconvac[c] for c in bus_convs) - qd + bs*v^2\n\n\n\n\n\nsum(p[a] for a in bus_arcs) + sum(p_dc[a_dc] for a_dc in bus_arcs_dc) == sum(pg[g] for g in bus_gens) + sum(pconvac[c] for c in bus_convs) - pd - gs*1^2\nsum(q[a] for a in bus_arcs) + sum(q_dc[a_dc] for a_dc in bus_arcs_dc) == sum(qg[g] for g in bus_gens) + sum(qconvac[c] for c in bus_convs) - qd + bs*1^2\n\n\n\n\n\nShunt constraint using linearized voltage magnitude difference phi\n\nsum(p) + sum(pconv_grid_ac)  == sum(pg) - sum(pd) - sum(gs*(1.0 + 2*phi)\n\n\n\n\n\nsum(p[a] for a in bus_arcs) + sum(pconv_grid_ac[c] for c in bus_convs_ac) == sum(pg[g] for g in bus_gens)  - pd - gs*w\nsum(q[a] for a in bus_arcs) + sum(qconv_grid_ac[c] for c in bus_convs_ac) == sum(qg[g] for g in bus_gens)  - qd + bs*w\n\n\n\n\n\n","category":"function"},{"location":"constraints/#DC-Branch-Constraints","page":"Constraints","title":"DC Branch Constraints","text":"","category":"section"},{"location":"constraints/#Ohm's-Law-Constraints","page":"Constraints","title":"Ohm's Law Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_ohms_dc_branch\n","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_ohms_dc_branch","page":"Constraints","title":"PowerModelsACDC.constraint_ohms_dc_branch","text":"Creates Ohms constraints for DC branches\n\np[f_idx] == p * g[l] * vmdc[f_bus] * (vmdc[f_bus] - vmdc[t_bus])\n\n\n\n\n\nCreates Ohms constraints for DC branches\n\np[f_idx] + p[t_idx] == 0)\n\n\n\n\n\nCreates Ohms constraints for DC branches\n\np[f_idx] + p[t_idx] == p * g[l] * (wdc[f_bus] - wdcr[f_bus,t_bus])\n\n\n\n\n\nDC branch power flow using linearized voltage magnitude difference phi\n\np_dc_fr == p * g *  (phi_fr - phi_to)\np_dc_to == p * g *  (phi_to - phi_fr)\n\n\n\n\n\nCreates Ohms constraints for DC branches\n\np[f_idx] + p[t_idx] == p * g[l] * (wdc[f_bus] - wdcr[f_bus,t_bus])\n\n\n\n\n\n","category":"function"},{"location":"constraints/#ACDC-Converter-Constraints","page":"Constraints","title":"ACDC Converter Constraints","text":"","category":"section"},{"location":"constraints/#Ohm's-Law-Constraints-2","page":"Constraints","title":"Ohm's Law Constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_converter_losses","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_converter_losses","page":"Constraints","title":"PowerModelsACDC.constraint_converter_losses","text":"Creates lossy converter model between AC and DC grid\n\npconv_ac[i] + pconv_dc[i] == a + bI + cI^2\n\n\n\n\n\nCreates lossy converter model between AC and DC grid, assuming U_i is approximatley 1 numerically\n\npconv_ac[i] + pconv_dc[i] == a + b*pconv_ac\n\n\n\n\n\nCreates lossy converter model between AC and DC side\n\npconv_ac[i] + pconv_dc[i] == a + b*I + c*Isq\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Current","page":"Constraints","title":"Current","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_converter_current","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_converter_current","page":"Constraints","title":"PowerModelsACDC.constraint_converter_current","text":"Links converter power & current\n\npconv_ac[i]^2 + pconv_dc[i]^2 == vmc[i]^2 * iconv_ac[i]^2\n\n\n\n\n\nConverter current constraint (not applicable)\n\n\n\n\n\n\n\nLinks converter power & current\n\npconv_ac[i]^2 + pconv_dc[i]^2 <= wc[i] * iconv_ac_sq[i]\npconv_ac[i]^2 + pconv_dc[i]^2 <= (Umax)^2 * (iconv_ac[i])^2\n\n\n\n\n\nLinks converter power & current\n\npconv_ac[i]^2 + pconv_dc[i]^2 <= wc[i] * iconv_ac_sq[i]\npconv_ac[i]^2 + pconv_dc[i]^2 <= (Umax)^2 * (iconv_ac[i])^2\n\n\n\n\n\nLinks converter power & current\n\npconv_ac[i]^2 + pconv_dc[i]^2 <= wc[i] * iconv_ac_sq[i]\npconv_ac[i]^2 + pconv_dc[i]^2 <= (Umax)^2 * (iconv_ac[i])^2\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Setpoint-Constraints-(PF-only)","page":"Constraints","title":"Setpoint Constraints (PF only)","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_active_conv_setpoint","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_active_conv_setpoint","page":"Constraints","title":"PowerModelsACDC.constraint_active_conv_setpoint","text":"pconv[i] == pconv\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Converter-auxiliary-constraints","page":"Constraints","title":"Converter auxiliary constraints","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_conv_transformer\nconstraint_conv_reactor\nconstraint_conv_filter","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_conv_transformer","page":"Constraints","title":"PowerModelsACDC.constraint_conv_transformer","text":"Converter transformer constraints\n\np_tf_fr ==  g/(tm^2)*vm_fr^2 + -g/(tm)*vm_fr*vm_to * cos(va_fr-va_to) + -b/(tm)*vm_fr*vm_to*sin(va_fr-va_to)\nq_tf_fr == -b/(tm^2)*vm_fr^2 +  b/(tm)*vm_fr*vm_to * cos(va_fr-va_to) + -g/(tm)*vm_fr*vm_to*sin(va_fr-va_to)\np_tf_to ==  g*vm_to^2 + -g/(tm)*vm_to*vm_fr  *    cos(va_to - va_fr)     + -b/(tm)*vm_to*vm_fr    *sin(va_to - va_fr)\nq_tf_to == -b*vm_to^2 +  b/(tm)*vm_to*vm_fr  *    cos(va_to - va_fr)     + -g/(tm)*vm_to*vm_fr    *sin(va_to - va_fr)\n\n\n\n\n\nConverter transformer constraints\n\np_tf_fr == -btf*(v^2)/tm*(va-vaf)\np_tf_to == -btf*(v^2)/tm*(vaf-va)\n\n\n\n\n\nConverter transformer constraints\n\np_tf_fr + ptf_to ==  rtf*itf\nq_tf_fr + qtf_to ==  xtf*itf\np_tf_fr^2 + qtf_fr^2 <= w/tm^2 * itf\nwf == w/tm^2 -2*(rtf*ptf_fr + xtf*qtf_fr) + (rtf^2 + xtf^2)*itf\n\n\n\n\n\nConverter transformer constraints\n\np_tf_fr ==  g/(tm^2)*w_fr + -g/(tm)*wr + -b/(tm)*wi)\nq_tf_fr == -b/(tm^2)*w_fr +  b/(tm)*wr + -g/(tm)*wi)\np_tf_to ==  g*w_to + -g/(tm)*wr     + -b/(tm)*(-wi))\nq_tf_to == -b*w_to +  b/(tm)*wr     + -g/(tm)*(-wi))\n\n\n\n\n\n","category":"function"},{"location":"constraints/#PowerModelsACDC.constraint_conv_reactor","page":"Constraints","title":"PowerModelsACDC.constraint_conv_reactor","text":"Converter reactor constraints\n\n-pconv_ac == gc*vmc^2 + -gc*vmc*vmf*cos(vac-vaf) + -bc*vmc*vmf*sin(vac-vaf)\n-qconv_ac ==-bc*vmc^2 +  bc*vmc*vmf*cos(vac-vaf) + -gc*vmc*vmf*sin(vac-vaf)\np_pr_fr ==  gc *vmf^2 + -gc *vmf*vmc*cos(vaf - vac) + -bc *vmf*vmc*sin(vaf - vac)\nq_pr_fr == -bc *vmf^2 +  bc *vmf*vmc*cos(vaf - vac) + -gc *vmf*vmc*sin(vaf - vac)\n\n\n\n\n\nConverter reactor constraints\n\np_pr_fr == -bc*(v^2)*(vaf-vac)\npconv_ac == -bc*(v^2)*(vac-vaf)\n\n\n\n\n\nConverter reactor constraints\n\np_pr_fr + ppr_to == rc*ipr\nq_pr_fr + qpr_to == xc*ipr\np_pr_fr^2 + qpr_fr^2 <= wf * ipr\nwc == wf -2*(rc*ppr_fr + xc*qpr_fr) + (rc^2 + xc^2)*ipr\n\n\n\n\n\nConverter reactor constraints\n\np_pr_fr ==  g/(tm^2)*w_fr + -g/(tm)*wr + -b/(tm)*wi)\nq_pr_fr == -b/(tm^2)*w_fr +  b/(tm)*wr + -g/(tm)*wi)\np_pr_to ==  g*w_to + -g/(tm)*wr     + -b/(tm)*(-wi))\nq_pr_to == -b*w_to +  b/(tm)*wr     + -g/(tm)*(-wi))\n\n\n\n\n\n","category":"function"},{"location":"constraints/#PowerModelsACDC.constraint_conv_filter","page":"Constraints","title":"PowerModelsACDC.constraint_conv_filter","text":"Converter filter constraints\n\nppr_fr + ptf_to == 0\nqpr_fr + qtf_to +  (-bv) * filter *vmf^2 == 0\n\n\n\n\n\nConverter filter constraints (no active power losses)\n\np_pr_fr + p_tf_to == 0\n\n\n\n\n\nConverter filter constraints\n\np_pr_fr + p_tf_to == 0\nq_pr_fr + q_tf_to + -bv*filter*wf == 0\n\n\n\n\n\n","category":"function"},{"location":"constraints/#Converter-firing-angle-for-LCC","page":"Constraints","title":"Converter firing angle for LCC","text":"","category":"section"},{"location":"constraints/","page":"Constraints","title":"Constraints","text":"constraint_conv_firing_angle","category":"page"},{"location":"constraints/#PowerModelsACDC.constraint_conv_firing_angle","page":"Constraints","title":"PowerModelsACDC.constraint_conv_firing_angle","text":"LCC firing angle constraints\n\npconv_ac == cos(phi) * Srated\nqconv_ac == sin(phi) * Srated\n\n\n\n\n\nConverter firing angle constraint (not applicable)\n\n\n\n\n\n\n\nLCC firing angle constraints\n\nqconv_ac >= Q1 + (pconv_ac-P1) * (Q2-Q1)/(P2-P1)\n\nP1 = cos(0) * Srated\nQ1 = sin(0) * Srated\nP2 = cos(pi) * Srated\nQ2 = sin(pi) * Srated\n\n\n\n\n\n","category":"function"},{"location":"problems/#Problem-types","page":"Problem Types","title":"Problem types","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"Following problem types have been implemented within PowerModelsACDC.jl. Example scripts to run the various problem types can be found under test/scripts.","category":"page"},{"location":"problems/#Hybrid-AC/DC-optimal-power-flow","page":"Problem Types","title":"Hybrid AC/DC optimal power flow","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_acdcopf(file or data, formulation, solver, setting)","category":"page"},{"location":"problems/#Hybrid-AC/DC-power-flow","page":"Problem Types","title":"Hybrid AC/DC power flow","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_acdcpf(file or data, formulation, solver, setting)","category":"page"},{"location":"problems/#DC-grid-TNEP-problem-(optimal-placement-of-converters-and-dc-branches)","page":"Problem Types","title":"DC grid TNEP problem (optimal placement of converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_tnepopf(file or data, formulation, solver, setting)","category":"page"},{"location":"problems/#DC-grid-TNEP-problem-in-branch-flow-formulation-(optimal-placement-of-converters-and-dc-branches)","page":"Problem Types","title":"DC grid TNEP problem in branch flow formulation (optimal placement of converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_tnepopf_bf(file or data, formulation, solver, setting)","category":"page"},{"location":"problems/#Multi-period-DC-grid-TNEP-problem-(optimal-placement-of-converters-and-dc-branches)","page":"Problem Types","title":"Multi-period DC grid TNEP problem (optimal placement of converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_mp_tnepopf(data, formulation, solver, setting)","category":"page"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"This problem type uses the multi-network functionality of PowerModels.jl.","category":"page"},{"location":"problems/#Multi-period-DC-grid-TNEP-problem-in-branch-flow-formulation-(optimal-placement-of-converters-and-dc-branches)","page":"Problem Types","title":"Multi-period DC grid TNEP problem in branch flow formulation (optimal placement of converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_mp_tnepopf_bf(data, formulation, solver, setting)","category":"page"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"This problem type uses the multi-network functionality of PowerModels.jl.","category":"page"},{"location":"problems/#AC/DC-grid-TNEP-problem-(optimal-placement-of-ac-branches,-converters-and-dc-branches)","page":"Problem Types","title":"AC/DC grid TNEP problem (optimal placement of ac branches, converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_acdctnepopf(file or data, formulation, solver, setting)","category":"page"},{"location":"problems/#AC/DC-grid-TNEP-problem-in-branch-flow-formulation-(optimal-placement-of-ac-branches,-converters-and-dc-branches)","page":"Problem Types","title":"AC/DC grid TNEP problem in branch flow formulation (optimal placement of ac branches, converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_acdctnepopf_bf(file or data, formulation, solver, setting)","category":"page"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"This problem type is currently not working as the ac grid TNEP problem in branch flow formulation is not implemented in PowerModels.jl.","category":"page"},{"location":"problems/#Multi-period-AC/DC-grid-TNEP-problem-(optimal-placement-of-converters-and-dc-branches)","page":"Problem Types","title":"Multi-period AC/DC grid TNEP problem (optimal placement of converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_mp_tnepopf(data, formulation, solver, setting)","category":"page"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"This problem type uses the multi-network functionality of PowerModels.jl.","category":"page"},{"location":"problems/#Multi-period-AC/DC-grid-TNEP-problem-in-branch-flow-formulation-(optimal-placement-of-converters-and-dc-branches)","page":"Problem Types","title":"Multi-period AC/DC grid TNEP problem in branch flow formulation (optimal placement of converters and dc branches)","text":"","category":"section"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"run_mp_tnepopf_bf(data, formulation, solver, setting)","category":"page"},{"location":"problems/","page":"Problem Types","title":"Problem Types","text":"This problem type uses the multi-network functionality of PowerModels.jl. This problem type is currently not working as the ac grid TNEP problem in branch flow formulation is not implemented in PowerModels.jl.","category":"page"},{"location":"objective/#Objective","page":"Objective","title":"Objective","text":"","category":"section"},{"location":"objective/","page":"Objective","title":"Objective","text":"CurrentModule = PowerModelsACDC","category":"page"},{"location":"objective/","page":"Objective","title":"Objective","text":"_PM.objective_min_fuel_cost","category":"page"},{"location":"specifications/#Problem-Specifications","page":"Problem Specifications","title":"Problem Specifications","text":"","category":"section"},{"location":"specifications/#ACDCOPF","page":"Problem Specifications","title":"ACDCOPF","text":"","category":"section"},{"location":"specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"OPF with support for AC and DC grids at the same time, including AC/DC converters.","category":"page"},{"location":"specifications/#Variables","page":"Problem Specifications","title":"Variables","text":"","category":"section"},{"location":"specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"variable_voltage(pm)\nvariable_generation(pm)\nvariable_branch_flow(pm)","category":"page"},{"location":"specifications/#Objective","page":"Problem Specifications","title":"Objective","text":"","category":"section"},{"location":"specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"objective_min_fuel_cost(pm)","category":"page"},{"location":"specifications/#Constraints","page":"Problem Specifications","title":"Constraints","text":"","category":"section"},{"location":"specifications/","page":"Problem Specifications","title":"Problem Specifications","text":"\nvariable_active_dcbranch_flow(pm)\nvariable_dcbranch_current(pm)\nvariable_dc_converter(pm)\nvariable_dcgrid_voltage_magnitude(pm)\n\nconstraint_voltage(pm)\nconstraint_voltage_dc(pm)\n\nfor i in _PM.ids(pm, :ref_buses)\n    constraint_theta_ref(pm, i)\nend\n\nfor i in _PM.ids(pm, :bus)\n    constraint_power_balance_ac(pm, i)\nend\n\nfor i in _PM.ids(pm, :branch)\n    # dirty, should be improved in the future TODO\n    if typeof(pm) <: _PM.SOCDFPowerModel\n        constraint_flow_losses(pm, i)\n        constraint_voltage_magnitude_difference(pm, i)\n        constraint_branch_current(pm, i)\n    else\n        constraint_ohms_yt_from(pm, i)\n        constraint_ohms_yt_to(pm, i)\n    end\n\n    constraint_voltage_angle_difference(pm, i)\n\n    constraint_thermal_limit_from(pm, i)\n    constraint_thermal_limit_to(pm, i)\nend\nfor i in _PM.ids(pm, :busdc)\n    constraint_power_balance_dc(pm, i)\nend\nfor i in _PM.ids(pm, :branchdc)\n    constraint_ohms_dc_branch(pm, i)\nend\nfor i in _PM.ids(pm, :convdc)\n    constraint_converter_losses(pm, i)\n    constraint_converter_current(pm, i)\n    constraint_conv_transformer(pm, i)\n    constraint_conv_reactor(pm, i)\n    constraint_conv_filter(pm, i)\n    if pm.ref[:nw][pm.cnw][:convdc][i][\"islcc\"] == 1\n        constraint_conv_firing_angle(pm, i)\n    end\nend","category":"page"},{"location":"result-data/#PowerModels-Result-Data-Format","page":"Results","title":"PowerModels Result Data Format","text":"","category":"section"},{"location":"result-data/#The-Result-Data-Dictionary","page":"Results","title":"The Result Data Dictionary","text":"","category":"section"},{"location":"result-data/","page":"Results","title":"Results","text":"PowerModels utilizes a dictionary to organize the results of a run command. The dictionary uses strings as key values so it can be serialized to JSON for algorithmic data exchange. The data dictionary organization is  consistent with  PowerModels.jl.","category":"page"},{"location":"#PowerModelACDC.jl-Documentation","page":"Home","title":"PowerModelACDC.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PowerModelsACDC","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PowerModelsACDC.jl is a Julia/JuMP package extending PowerModels.jl, which focuses on Steady-State Power Network Optimization. PowerModels.jl provides utilities for parsing and modifying network data and is designed to enable computational evaluation of emerging power network formulations and algorithms in a common platform.","category":"page"},{"location":"","page":"Home","title":"Home","text":"PowerModelsACDC.jl adds new problem types:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Power flow with both ac and dc lines, from point-to-point connections to meshed grids, with converters connecting ac and dc grid lines\nThe equivalent optimal power flow problem type and TNEP problem type","category":"page"},{"location":"","page":"Home","title":"Home","text":"PowerModelsACDC.jl extends the formulation hierarchy developed for AC grids, with equivalent DC grid and converter station formulations:","category":"page"},{"location":"","page":"Home","title":"Home","text":"ACPPowerModel\nDCPPowerModel\nSOCWRPowerModel\nSDPWRMPowerModel\nQCWRPowerModel\nQCWRTriPowerModel\nLPACPowerModel","category":"page"},{"location":"","page":"Home","title":"Home","text":"Developed by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Hakan Ergun, Jay Dave KU Leuven / EnergyVille\nFrederik Geth, CSIRO","category":"page"},{"location":"#Installation-of-PowerModelACDC","page":"Home","title":"Installation of PowerModelACDC","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The latest stable release of PowerModelACDC can be installed using the Julia package manager with","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pkg.add(\"PowerModelsACDC\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"The current version of PowerModelsACDC is 0.3.2 and is compatible with PowerModels v0.17.2, InfrastrucureModels v0.5.3","category":"page"},{"location":"","page":"Home","title":"Home","text":"!!! Important     This is a research-grade optimization package.","category":"page"},{"location":"#Special-Thanks-To","page":"Home","title":"Special Thanks To","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Jef Beerten (KU Leuven/EnergyVille) for his insights in AC/DC power flow modelling. Carleton Coffrin (Los Alamos National Laboratory) for his countless design tips.  ","category":"page"},{"location":"parser/#File-IO","page":"File IO","title":"File IO","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"CurrentModule = PowerModelsACDC","category":"page"},{"location":"parser/#Specific-Data-Formats","page":"File IO","title":"Specific Data Formats","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"The .m matpower files have been extended with the fields as described in the MatACDC manual, available in https://www.esat.kuleuven.be/electa/teaching/matacdc#documentation.","category":"page"},{"location":"parser/#DC-Bus","page":"File IO","title":"DC Bus","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"busdc_i   - DC bus number\ngrid      - DC grid to which the DC bus is connected (in case multiple DC grids)\nPdc       - Power withdrawn from the DC grid (MW) (only for PF)\nVdc       - DC voltage (p.u.)\nbasekVdc  - Base DC voltage (kV)\nVdcmax    - maximum DC voltage (p.u.)\nVdcmin    - minimum DC voltage (p.u.)\nCdc       - DC bus capacitor size (p.u.), (not used in (optimal) power flow)","category":"page"},{"location":"parser/#DC-Branch","page":"File IO","title":"DC Branch","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"fbusdc  - from bus number DC\ntbusdc  - to bus number DC\nr       - resistance (p.u.)\nl       - inductance (p.u./s) (not used in (optimal) power flow)\nc       - total line charging capacity (p.u. * s) (not used in power flow)\nrateA   - MVA rating A\nrateB   - MVA rating B (long termrating, not used)\nrateC   - MVA rating C (long termrating, not used)\nstatus  - initial branch status, (1 - in service, 0 - out of service) (not yet implemented)","category":"page"},{"location":"parser/#AC-DC-converter","page":"File IO","title":"AC DC converter","text":"","category":"section"},{"location":"parser/","page":"File IO","title":"File IO","text":"busdc_i     - converter bus number (DC bus numbering)\nbusac_i     - converter bus number (AC bus numbering)  \ntype_dc     - DC bus type (1 = constant power, 2 = DC slack, 3 = DC droop) (only power flow)  \ntype_ac     - AC bus type (1 = PQ, 2 = PV), should be consistent with AC bus  (only power flow)  \nP_g         - active power injected in the AC grid (MW)\nQ_g         - reactive power injected in the AC grid (MVAr)    \nVtar        - target voltage of converter connected AC bus (p.u.)\nislcc       - binary indicating LCC converter (islcc = 1 -> LCC)\nrtf         - transformer resistance (p.u.) (not yet implemented)\nxtf         - transformer reactance (p.u.) (not yet implemented)\ntransformer - binary indicating converter transformer    \nbf          - filter susceptance (p.u.) (not yet implemented)\nfilter      - binary indicating converter filter\nrc          - phase reactor resistance (p.u.) (not yet implemented)   \nxc          - phase reactor reactance (p.u.) (not yet implemented)\nreactor     - binary indicating converter reactor\nbasekVac    - converter AC base voltage (kV)    \nVmmax       - maximum converter voltage magnitude (p.u.)   \nVmmin       - minimumconverter voltagemagnitude (p.u.)   \nImax        - maximum converter current (p.u.)   \nstatus      - converter status (1 = on, 0 = off) (not yet implemented)\nLossA       - constant loss coefficient (MW)\nLossB       - linear loss coefficient (kV)\nLossCrec    - rectifier quadratic loss coefficient (Ω­)\nLossCinv    - inverter quadratic loss coefficient (Ω­) (not yet implemented)\ndroop       - DC voltage droop (MW/p.u) (not yet implemented)      \nPdcset      - voltage droop power set-point (MW)  (not yet implemented)\nVdcset      - voltage droop voltage set-point (p.u.) (not yet implemented)\ndVdcset     - voltage droop deadband (p.u.) (optional) (not yet implemented)\nPacmax      - Maximum AC active power (MW)\nPacmin      - Minimum AC active power (MW)\nQacmax      - Maximum AC reactive power (Mvar)\nQacmin      - Minimum AC reactive power (Mvar)","category":"page"}]
}
